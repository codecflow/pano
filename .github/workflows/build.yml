name: Build

on:
  workflow_call:
    inputs:
      version:
        required: true
        type: string

permissions:
  contents: read

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    name: Build (${{ matrix.target }})
    runs-on: ${{ matrix.runner }}
    strategy:
      fail-fast: false
      matrix:
        include:
          - runner: ubuntu-24.04
            target: x86_64-unknown-linux-gnu
            arch: x86_64
            platform: linux
          - runner: ubuntu-24.04-arm64
            target: aarch64-unknown-linux-gnu
            arch: aarch64
            platform: linux
          - runner: macos-13
            target: x86_64-apple-darwin
            arch: x86_64
            platform: macos
          - runner: macos-14
            target: aarch64-apple-darwin
            arch: aarch64
            platform: macos

    steps:
      - uses: actions/checkout@v4

      - name: Install Linux deps
        if: matrix.platform == 'linux'
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config \
            libgtk-4-dev libwebkit2gtk-4.1-dev libsoup-3.0-dev

      - name: Install macOS deps
        if: matrix.platform == 'macos'
        run: |
          brew update
          brew install pkg-config gtk4 webkit2gtk-4.1 libsoup

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - uses: Swatinem/rust-cache@v2
        with:
          cache-on-failure: true
          key: ${{ runner.os }}-${{ matrix.target }}

      - name: Build
        run: cargo build --release --locked --target ${{ matrix.target }}

      - name: Package
        shell: bash
        run: |
          set -euo pipefail
          VERSION="${{ inputs.version }}"
          VERSION="${VERSION#v}"  # drop leading 'v' if present
          BIN=target/${{ matrix.target }}/release/pano
          mkdir -p out
          cp "$BIN" out/pano
          if [ "${{ matrix.platform }}" = "linux" ]; then
            strip out/pano || true
            ARCHIVE="pano-${VERSION}-${{ matrix.platform }}-${{ matrix.arch }}.tar.gz"
            tar -czf "$ARCHIVE" -C out pano
          else
            strip -x out/pano || true
            ARCHIVE="pano-${VERSION}-${{ matrix.platform }}-${{ matrix.arch }}.zip"
            (cd out && zip -r "../$ARCHIVE" pano)
          fi
          echo "ARCHIVE=$ARCHIVE" >> "$GITHUB_ENV"

      - uses: actions/upload-artifact@v4
        with:
          name: pano-${{ matrix.platform }}-${{ matrix.arch }}
          path: ${{ env.ARCHIVE }}
          if-no-files-found: error
          retention-days: 7
