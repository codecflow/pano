name: Build and release (linux, macos)

on:
  push:
    tags: ["v*.*.*"]
    branches: [main]
  pull_request:
    branches: [main]
    types: [opened, synchronize, reopened, edited]
  workflow_dispatch:

jobs:
  lint_commit:
    name: Lint Commit Message
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
      - run: npm i -g @commitlint/cli @commitlint/config-conventional commitlint-plugin-regex-match

      # Lint PR title (PRs) or the latest commit message (pushes/tags)
      - name: Lint message/title
        shell: bash
        run: |
          MSG=""
          if [ "${{ github.event_name }}" = "pull_request" ]; then
            MSG="${{ github.event.pull_request.title }}"
          elif [ -n "${{ github.event.head_commit.message }}" ]; then
            MSG="${{ github.event.head_commit.message }}"
          else
            MSG="${{ github.ref_name }}"
          fi
          echo "Linting: $MSG"
          echo "$MSG" | npx commitlint

  build-linux:
    name: Build (linux)
    needs: [lint_commit]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Install system deps
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            build-essential pkg-config \
            libgtk-4-dev libwebkit2gtk-4.1-dev libsoup-3.0-dev

      - uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build (release)
        run: cargo build --release --locked

      - name: Package
        run: |
          mkdir -p out
          cp target/release/pano out/pano
          strip out/pano || true
          tar -czf pano-linux-$(uname -m).tar.gz -C out pano

      - uses: actions/upload-artifact@v4
        with:
          name: pano-linux-${{ runner.arch }}
          path: pano-linux-$(uname -m).tar.gz

  build-macos:
    name: Build (macos)
    needs: [lint_commit]
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      - uses: dtolnay/rust-toolchain@stable

      - name: Cache cargo
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            target
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo-

      - name: Build (release)
        run: cargo build --release --locked

      - name: Detect arch & package
        id: pkg
        run: |
          ARCH=$(uname -m)  # arm64 on Apple Silicon
          mkdir -p out
          cp target/release/pano out/pano
          chmod +x out/pano
          ZIP="pano-macos-${ARCH}.zip"
          /usr/bin/zip -r "$ZIP" out/pano
          echo "zip=$ZIP" >> "$GITHUB_OUTPUT"

      - uses: actions/upload-artifact@v4
        with:
          name: pano-macos-${{ runner.arch }} # typically ARM64
          path: ${{ steps.pkg.outputs.zip }}

  release:
    name: Create Release
    if: startsWith(github.ref, 'refs/tags/')
    needs: [lint_commit, build-linux, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/download-artifact@v4
        with:
          path: artifacts

      - name: Generate checksums
        run: |
          cd artifacts
          rm -f checksums.txt
          # hash any zips/tarballs we produced
          find . -type f \( -name '*.zip' -o -name '*.tar.gz' \) -print0 \
            | xargs -0 -I{} sha256sum "{}" >> checksums.txt
          cat checksums.txt

      - name: Publish GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            artifacts/**/*.zip
            artifacts/**/*.tar.gz
            artifacts/checksums.txt
          generate_release_notes: true
          make_latest: true
          draft: false
          prerelease: ${{ contains(github.ref_name, '-rc') || contains(github.ref_name, '-beta') || contains(github.ref_name, '-alpha') }}
